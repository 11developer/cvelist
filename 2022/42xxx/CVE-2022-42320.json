{
   "CVE_data_meta" : {
      "ASSIGNER" : "security@xenproject.org",
      "ID" : "CVE-2022-42320"
   },
   "affects" : {
      "vendor" : {
         "vendor_data" : [
            {
               "product" : {
                  "product_data" : [
                     {
                        "product_name" : "xen",
                        "version" : {
                           "version_data" : [
                              {
                                 "version_affected" : "?",
                                 "version_value" : "consult Xen advisory XSA-417"
                              }
                           ]
                        }
                     }
                  ]
               },
               "vendor_name" : "Xen"
            }
         ]
      }
   },
   "configuration" : {
      "configuration_data" : {
         "description" : {
            "description_data" : [
               {
                  "lang" : "eng",
                  "value" : "All versions of Xen are in principle vulnerable.\n\nOnly systems running the C variant of Xenstore (xenstored or xenstore-\nstubdom) are vulnerable.\n\nSystems using the Ocaml variant of Xenstore (oxenstored) are not vulnerable.\n\nVulnerable systems are only those running software where one domain is\ngranted access to another's xenstore nodes, without complete cleanup\nof those nodes on domain destruction.  No such software is enabled in\ndefault configurations of upstream Xen.\n\nTherefore upstream Xen, without additional management software (in\nhost or guest(s)), is not vulnerable in the default (host and guest)\nconfiguration."
               }
            ]
         }
      }
   },
   "credit" : {
      "credit_data" : {
         "description" : {
            "description_data" : [
               {
                  "lang" : "eng",
                  "value" : "This issue was discovered by Jürgen Groß of SUSE."
               }
            ]
         }
      }
   },
   "data_format" : "MITRE",
   "data_type" : "CVE",
   "data_version" : "4.0",
   "description" : {
      "description_data" : [
         {
            "lang" : "eng",
            "value" : "Xenstore: Guests can get access to Xenstore nodes of deleted domains\n\nAccess rights of Xenstore nodes are per domid.  When a domain is gone,\nthere might be Xenstore nodes left with access rights containing the\ndomid of the removed domain.  This is normally no problem, as those\naccess right entries will be corrected when such a node is written\nlater.\n\nThere is a small time window when a new domain is created, where the\naccess rights of a past domain with the same domid as the new one will\nbe regarded to be still valid, leading to the new domain being able to\nget access to a node which was meant to be accessible by the removed\ndomain.  For this to happen another domain needs to write the node\nbefore the newly created domain is being introduced to Xenstore by\ndom0."
         }
      ]
   },
   "impact" : {
      "impact_data" : {
         "description" : {
            "description_data" : [
               {
                  "lang" : "eng",
                  "value" : "In some circumstances, it might be possible for a new guest domain to\naccess resources belonging to a previous domain.  The impact would\ndepend on the software in use and the configuration, but might include\nany of denial of service, information leak, or privilege escalation."
               }
            ]
         }
      }
   },
   "problemtype" : {
      "problemtype_data" : [
         {
            "description" : [
               {
                  "lang" : "eng",
                  "value" : "unknown"
               }
            ]
         }
      ]
   },
   "references" : {
      "reference_data" : [
         {
            "url" : "https://xenbits.xenproject.org/xsa/advisory-417.txt"
         }
      ]
   },
   "workaround" : {
      "workaround_data" : {
         "description" : {
            "description_data" : [
               {
                  "lang" : "eng",
                  "value" : "Running oxenstored instead of xenstored will avoid the vulnerability."
               }
            ]
         }
      }
   }
}
